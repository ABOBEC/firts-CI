# Определяет API версию и тип объекта, который будет создан (Deployment)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer # Имя Deployment, используется для идентификации этого ресурса в кластере
spec:
  replicas: 1 # Количество подов, которые должны быть запущены
  selector:
    matchLabels:
      app: adminer # Метка, используемая для выбора подов, которые принадлежат этому Deployment
  template:
    metadata:
      labels:
        app: adminer # Метка, присваиваемая каждому поду, созданному этим Deployment
    spec:
      containers:
        - name: adminer # Имя контейнера
          image: adminer # Образ контейнера, из которого будет создан контейнер
          ports:
            - containerPort: 8080 # Порт, который будет открыт внутри контейнера
          livenessProbe: # Настройка Liveness Probe для проверки живучести контейнера
            # Тип проверки Liveness: HTTP GET запрос по указанному пути и порту
            httpGet:
              path: / # Путь для HTTP GET запроса
              port: 8080 # Порт для HTTP GET запроса
            initialDelaySeconds: 5  # Задержка перед первой проверкой после старта контейнера
            periodSeconds: 10       # Интервал между проверками
---
# Определяет API версию и тип объекта, который будет создан (Service)
apiVersion: v1
kind: Service
metadata:
  name: adminer # Имя Service, используется для идентификации этого ресурса в кластере
spec:
  type: NodePort # Тип Service, который открывает порт на всех узлах кластера
  selector:
    app: adminer # Метка, используемая для выбора подов, которым будет направляться трафик
  ports:
    - port: 8080 # Порт, который будет открыт внутри кластера
      nodePort: 30181 # Порт на узле, через который будет доступен сервис
