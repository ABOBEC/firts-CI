# Определяет API версию и тип объекта, который будет создан (Deployment)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ptscript # Имя Deployment, используется для идентификации этого ресурса в кластере
spec:
  replicas: 1 # Количество подов, которые должны быть запущены
  selector:
    matchLabels:
      app: ptscript # Метка, используемая для выбора подов, которые принадлежат этому Deployment
  template:
    metadata:
      labels:
        app: ptscript # Метка, присваиваемая каждому поду, созданному этим Deployment
    spec:
      containers:
        - name: ptscript # Имя контейнера
          image: abobec/first_ci:72b83a2f114fd7ca359c0e2030dbc34d519380f3 # Образ контейнера, из которого будет создан контейнер
          ports:
            - containerPort: 8000 # Порт, который будет открыт внутри контейнера
          livenessProbe:
            # Проверка состояния Liveness: приложение отвечает на запрос по /healthz
            httpGet:
              path: /healthz # Путь для HTTP GET запроса для проверки Liveness
              port: 8000 # Порт для HTTP GET запроса для проверки Liveness
            initialDelaySeconds: 50 # Задержка перед первой проверкой после старта контейнера
            periodSeconds: 10       # Интервал между проверками
          readinessProbe:
            # Проверка состояния Readiness: приложение готово обрабатывать запросы по /readiness
            httpGet:
              path: /readiness # Путь для HTTP GET запроса для проверки Readiness
              port: 8000 # Порт для HTTP GET запроса для проверки Readiness
            initialDelaySeconds: 50  # Задержка перед первой проверкой после старта контейнера
            periodSeconds: 10       # Интервал между проверками
---

# Определяет API версию и тип объекта, который будет создан (Service)
apiVersion: v1
kind: Service
metadata:
  name: ptcript-service # Имя Service, используется для идентификации этого ресурса в кластере
spec:
  selector:
    app: ptcript # Метка, используемая для выбора подов, которым будет направляться трафик
  ports:
    - protocol: TCP # Протокол для Service (TCP)
      port: 8000 # Порт, который будет открыт внутри кластера
      targetPort: 8000 # Порт на контейнере, на который будет направляться трафик
  type: LoadBalancer # Тип Service, который создает внешний IP для доступа к сервису
